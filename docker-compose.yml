version: '3.8'

networks:
  switter-network:
    driver: bridge
    name: switter-network

services:

  postgres:
    image: postgres:15-alpine
    container_name: twitter-postgres
    environment:
      POSTGRES_DB: twitter_clone
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-DevPassword123!}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - twitter-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: twitter-redis
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --requirepass ${REDIS_PASSWORD:-RedisDevPass123!}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - twitter-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: twitter-zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      ZOO_MAX_CLIENT_CNXNS: 100
      ZOO_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    ports:
      - "2181:2181"
    networks:
      - twitter-network
    healthcheck:
      test: echo "ruok" | nc localhost 2181
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:latest
    container_name: twitter-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - kafka_data:/bitnami/kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - twitter-network
    healthcheck:
      test: kafka-topics.sh --bootstrap-server localhost:9092 --list
      interval: 15s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  seq:
    image: datalust/seq:latest
    container_name: twitter-seq
    environment:
      ACCEPT_EULA: Y
      SEQ_FIRSTRUN_ADMINUSERNAME: admin
      SEQ_FIRSTRUN_ADMINPASSWORD: ${SEQ_PASSWORD:-SeqDevPass123!}
    volumes:
      - seq_data:/data
    ports:
      - "5341:5341"   # Web UI
      - "5342:5342"   # Ingestion API
    networks:
      - twitter-network
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5341/api || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  redis-commander:
    image: rediscomm