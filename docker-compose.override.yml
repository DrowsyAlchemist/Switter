services:

  apigateway:
    build:
      context: .  
      dockerfile: src/ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - Logging:LogLevel:Default=Information
    ports:
      - "5000:80"  
    volumes:
      - ./src/ApiGateway:/app  
      - ~/.aspnet/https:/https:ro  
    depends_on:
      - authservice
      - userservice
      - tweetservice
      - chatservice
    restart: unless-stopped

  authservice:
    build:
      context: .
      dockerfile: src/AuthService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:PostgreSQL=Host=postgres;Database=switter;Username=postgres;Password=DevPassword123!
      - Redis:ConnectionString=redis:6379
      - Jwt:Secret=YourSuperSecretKeyForDevelopmentOnlyChangeInProduction
      - Jwt:Issuer=switter-dev
      - Jwt:Audience=switter-dev
    ports:
      - "5001:80"
    volumes:
      - ./src/AuthService:/app
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  userservice:
    build:
      context: .
      dockerfile: src/UserService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:PostgreSQL=Host=postgres;Database=switter;Username=postgres;Password=DevPassword123!
      - Redis:ConnectionString=redis:6379
      - Kafka:BootstrapServers=kafka:9092
    ports:
      - "5002:80"
    volumes:
      - ./src/UserService:/app
    depends_on:
      - postgres
      - redis
      - kafka
    restart: unless-stopped

  tweetservice:
    build:
      context: .
      dockerfile: src/TweetService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:PostgreSQL=Host=postgres;Database=switter;Username=postgres;Password=DevPassword123!
      - Redis:ConnectionString=redis:6379
      - Kafka:BootstrapServers=kafka:9092
    ports:
      - "5003:80"
    volumes:
      - ./src/TweetService:/app
    depends_on:
      - postgres
      - redis
      - kafka
    restart: unless-stopped

  feedservice:
    build:
      context: .
      dockerfile: src/FeedService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - Redis:ConnectionString=redis:6379
      - Kafka:BootstrapServers=kafka:9092
    ports:
      - "5004:80"
    volumes:
      - ./src/FeedService:/app
    depends_on:
      - redis
      - kafka
    restart: unless-stopped

  chatservice:
    build:
      context: .
      dockerfile: src/ChatService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:PostgreSQL=Host=postgres;Database=switter;Username=postgres;Password=DevPassword123!
      - Redis:ConnectionString=redis:6379,allowAdmin=true
      - Kafka:BootstrapServers=kafka:9092
    ports:
      - "5005:80"
      - "5006:5006"  
    volumes:
      - ./src/ChatService:/app
    depends_on:
      - postgres
      - redis
      - kafka
    restart: unless-stopped

  notificationservice:
    build:
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - Redis:ConnectionString=redis:6379
      - Kafka:BootstrapServers=kafka:9092
    ports:
      - "5007:80"
    volumes:
      - ./src/NotificationService:/app
    depends_on:
      - redis
      - kafka
    restart: unless-stopped

  postgres:
    environment:
      - POSTGRES_DB=switter
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432" 
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=100 

  redis:
    command: >
      redis-server
      --appendonly yes 
      --maxmemory 256mb 
      --maxmemory-policy allkeys-lru  
    ports:
      - "6379:6379"

  kafka:
    environment:
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_DELETE_TOPIC_ENABLE=true
      - KAFKA_NUM_PARTITIONS=3  
    ports:
      - "9092:9092"
      - "9093:9093"

  seq:
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINUSERNAME=admin
      - SEQ_FIRSTRUN_ADMINPASSWORDHASH=
    ports:
      - "5341:5341"   # Web UI
      - "5342:5342"   # Ingestion port